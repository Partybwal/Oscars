@page "/numnoms"
@rendermode InteractiveServer

@using MySql.Data;
@using MySql.Data.MySqlClient;
@using System.Data;
@using System.Linq;

@using Data;

@inject Database DBConnect

@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
<PageTitle>Num nominations</PageTitle>

<div class="container-fluid">

	<div class="d-flex flex-row">

			<table class="table-sm table-bordered m-2">
				<thead>
<!--					<tr bgcolor="#eeeeee">
						<th width="300" colspan="3 scope="col"><h3>Most nominated movies of the @currentCeremonyId@Oscars.ordinalSuffix(currentCeremonyId) Oscars</h3></th>
					</tr>
		-->			<tr bgcolor="#eeeeee">
					<th width="30">Together</th>
					<th width="300">Title</th>
					<th width="*" colspan="2">Nominations</th>
					@foreach (DataRow u in UsersParticipating.Rows)
					{
						<th width="30" class="text-center">@u["ShortName"]</th>
					}
					<th width="*">Available</th>
				</tr>
				</thead>
				<tbody>

					@foreach (DataRow row in MovieNoms.Rows)
					{
					bool together = (row["WatchTogether"] as sbyte?) == 1;
					int movieId = (int)row["MovieId"];
					<tr>
						<td><input type="checkbox" checked="@together" @onchange="eventArgs => { DBConnect.SetTogether(movieId, (bool)eventArgs.Value); }" /></td>
						<td>@row["Title"]</td>
						<td>@row["NumNominations"]</td>
						<td>@row["Nominations"]</td>
						@foreach (DataRow u in UsersParticipating.Rows)
						{
							bool seen = false;
							if ((u["ID"] as int?).HasValue)
							{
								int uid = (u["ID"] as int?).Value;
								foreach (DataRow u2 in UsersSeenPerMovie[movieId].Rows)
									if (u2["ID"] as int? == u["ID"] as int?)
										seen = true;
								<td align="center"><input type="checkbox" checked="@(seen)" @onchange="eventArgs => { seenChanged(movieId, uid, (bool)eventArgs.Value); }" /></td>
							}
						}
						<td bgcolor="@((string.IsNullOrWhiteSpace(row["URL"] as string) || (row["URL"] as string)?.ToLower()=="no") ? "#F00" : "#0F0")">@row["URL"]</td>
					</tr>
					}

				</tbody>
			</table>
	</div>
</div>

@code {

	DataTable MovieNoms = new DataTable();
	DataTable UsersParticipating = new DataTable();
	Dictionary<int, DataTable> UsersSeenPerMovie = new Dictionary<int, DataTable>();
	DataTable Ceremonies = new DataTable();
	int currentCeremonyId = -1;
	protected override async Task OnAfterRenderAsync(bool firstRender)
	{
		if (await sessionStorage.ContainKeyAsync("CurrentCeremonyId"))
			currentCeremonyId = await sessionStorage.GetItemAsync<int>("CurrentCeremonyId");
		if (currentCeremonyId == -1)
		{
			var Ceremonies = await DBConnect.GetCeremonies();
			currentCeremonyId = (int)Ceremonies.Rows[0]["ID"];
			await sessionStorage.SetItemAsync<int>("CurrentCeremonyId", currentCeremonyId);
			StateHasChanged();
		}
	}
	protected override async Task OnInitializedAsync()
	{
		if (currentCeremonyId == -1)
		{
			var Ceremonies = await DBConnect.GetCeremonies();
			currentCeremonyId = (int)Ceremonies.Rows[0]["ID"];
		}
		//Get the users participating the selected year:
		UsersParticipating = await DBConnect.GetUsersParticipating(currentCeremonyId);
		//Get nominations
		MovieNoms = await DBConnect.GetNumberOfNominations(currentCeremonyId);
		foreach (DataRow movie in MovieNoms.Rows)
		{
			DataTable users = await DBConnect.GetUsersSeen((int)movie["MovieId"]);
			if (!UsersSeenPerMovie.ContainsKey((int)movie["MovieId"]))
				UsersSeenPerMovie.Add((int)movie["MovieId"], users);
		}
	}

	public async Task seenChanged(int movieId, int userId, bool seen)
	{
		// get the checkbox state
		DBConnect.SetMovieSeenByUser(movieId, userId, seen);
	}
}